name: Preview (Backend)

on:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: read
      pull-requests: write   # needed for PR comments

    # Use our runner image (root user; we chown workspace to appuser before npm)
    container:
      image: ghcr.io/${{ github.repository }}/snf-runner:latest

    env:
      PR_NUMBER: ${{ github.event.number }}
      RENDER_URL: https://sniffr-staging-pr-${{ github.event.number }}.onrender.com
      # Optional: set this in repo → Settings → Variables (we read from vars.*)
      PRETTY_DOMAIN: ${{ vars.PRETTY_DOMAIN }}

    steps:
      - name: Who am I
        run: |
          whoami && id
          ls -ld /__w /__w/_temp || true

      - uses: actions/checkout@v4

      # B) SAFER: only chown the repo workspace; do NOT touch runner/system mounts
      - name: Fix workspace ownership for appuser
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          chown -R appuser:appuser "$GITHUB_WORKSPACE"

      - name: Install deps (as appuser)
        run: su -s /bin/bash appuser -c "npm ci || npm install --no-audit --no-fund"

      - name: Build (as appuser)
        run: su -s /bin/bash appuser -c "npm run build --if-present"

      - name: Wait for Render preview to come up
        run: |
          URL="$RENDER_URL"
          echo "Polling $URL/healthz ..."
          for i in {1..40}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL/healthz" || true)
            if [ "$code" = "200" ]; then
              echo "Health OK"
              echo "RENDER_OK=1" >> $GITHUB_ENV
              break
            fi
            sleep 5
          done
          if [ "${RENDER_OK:-}" != "1" ]; then
            echo "Health not green yet, but Render can be racey; continuing…"
          fi

      # C) Notify the Cloudflare Worker control-plane to upsert PR → origin
      - name: Notify preview alias worker
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}   # add in repo → Settings → Secrets
          PR_NUMBER: ${{ github.event.number }}
          RENDER_URL: ${{ env.RENDER_URL }}
        run: |
          set -euo pipefail
          if [ -z "${WEBHOOK_SECRET:-}" ]; then
            echo "WEBHOOK_SECRET not set; skipping."
            exit 0
          fi
          curl -sS -X POST "https://render-pr-alias.joemerrillis.workers.dev/hook" \
            -H "x-hook-secret: ${WEBHOOK_SECRET}" \
            -H "content-type: application/json" \
            --data @- <<'JSON'
          {
            "action": "upsert",
            "pr": ${{ env.PR_NUMBER }},
            "url": "${{ env.RENDER_URL }}"
          }
          JSON
        continue-on-error: true  # don't fail the whole job if webhook is slow/flaky

      - name: Compose preview links
        id: compose
        run: |
          RENDER_MSG="✅ API Preview (Render): $RENDER_URL"
          if [ -n "$PRETTY_DOMAIN" ]; then
            PRETTY_URL="https://pr-${PR_NUMBER}-stage.${PRETTY_DOMAIN}"
            PRETTY_MSG="✨ Pretty URL: ${PRETTY_URL}"
          else
            PRETTY_MSG=""
          fi

          echo "render=$RENDER_MSG" >> $GITHUB_OUTPUT
          echo "pretty=$PRETTY_MSG" >> $GITHUB_OUTPUT

      # D) Comment both links on the PR
      - name: Comment Preview URLs
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ${{ steps.compose.outputs.render }}
            ${{ steps.compose.outputs.pretty }}
