- name: Get Render PR preview URL (web)
  env:
    RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
    SERVICE_ID: ${{ secrets.RENDER_WEB_SERVICE_ID }}
    BRANCH: ${{ github.head_ref }}
    PR_NUMBER: ${{ github.event.pull_request.number }}
    WAIT_SECS: 600
  run: |
    node ./scripts/render-get-preview-url.mjs > web_url.txt
    echo "WEB_RENDER_URL=$(cat web_url.txt)" >> $GITHUB_ENV
  continue-on-error: true

- name: Get Render PR preview URL (api)
  env:
    RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
    SERVICE_ID: ${{ secrets.RENDER_API_SERVICE_ID }}
    BRANCH: ${{ github.head_ref }}
    PR_NUMBER: ${{ github.event.pull_request.number }}
    WAIT_SECS: 600
  run: |
    node ./scripts/render-get-preview-url.mjs > api_url.txt
    echo "API_RENDER_URL=$(cat api_url.txt)" >> $GITHUB_ENV
  continue-on-error: true

- name: Upsert pretty URL (available origins only)
  env:
    PR_NUM: ${{ github.event.pull_request.number }}
    WORKER_WEBHOOK: ${{ secrets.PREVIEW_WORKER_URL }}   # e.g. https://render-pr-alias.joemerrillis.workers.dev
    WORKER_SECRET: ${{ secrets.PREVIEW_WORKER_SECRET }}
  run: |
    # build payload â€” for single-origin while API is booting:
    payload=$(jq -n --argjson pr $PR_NUM --arg url "$RENDER_URL" \
      '{action:"upsert", pr:$pr, url:$url}')
    # or, if you have both web+api URLs available, send {api, web, apiPrefixes} instead

    curl -fsSL -X POST "$WORKER_WEBHOOK" \
      -H "x-webhook-secret: $WORKER_SECRET" \
      -H 'content-type: application/json' \
      --data "$payload"
      -H "x-webhook-secret: $WORKER_SECRET" \
      -H 'content-type: application/json' \
      --data "$payload"
