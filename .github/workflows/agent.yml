name: ChatGPT Agent (plan/apply)

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  route:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'issues' ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/agent'))
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect command + request text
        id: cmd
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            BODY="${{ github.event.issue.body }}"
            TITLE="${{ github.event.issue.title }}"
            TEXT="$TITLE â€” $BODY"
          else
            BODY="${{ github.event.comment.body }}"
            TEXT="$BODY"
          fi

          # default to /agent plan on bare "/agent"
          if [[ "$BODY" == "/agent" ]]; then
            echo "command=plan" >> $GITHUB_OUTPUT
          else
            # /agent plan|revise|apply <rest>
            CMD=$(echo "$BODY" | awk '{print $2}')
            [[ -z "$CMD" ]] && CMD="plan"
            echo "command=$CMD" >> $GITHUB_OUTPUT
          fi

          # Capture freeform text after the command
          MSG=$(echo "$BODY" | sed -E 's#^/agent( +[a-z]+)? *##i')
          if [[ -z "$MSG" ]]; then
            MSG="$TEXT"
          fi
          printf 'text<<EOF\n%s\nEOF\n' "$MSG" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install agent deps
        run: |
          npm init -y >/dev/null 2>&1
          npm i openai@^4 @octokit/rest@^20

      - name: Run planner/apply
        id: agent
        env:
          MODE: ${{ steps.cmd.outputs.command }}
          REQUEST_TEXT: ${{ steps.cmd.outputs.text }}
        run: |
          node .github/agent/agent.mjs

      - name: Comment plan (if any)
        if: steps.agent.outputs.plan_path != ''
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const p = "${{ steps.agent.outputs.plan_path }}";
            const body = fs.readFileSync(p, 'utf8');
            const issue_number = context.payload.issue?.number || context.payload.comment?.issue_url.split('/').pop();
            await github.rest.issues.createComment({ ...context.repo, issue_number, body });

      - name: Comment PR link (if any)
        if: steps.agent.outputs.pr_url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const url = "${{ steps.agent.outputs.pr_url }}";
            const issue_number = context.payload.issue?.number || context.payload.comment?.issue_url.split('/').pop();
            await github.rest.issues.createComment({ ...context.repo, issue_number, body: `ðŸ§ª Draft PR opened: ${url}\n(Preview will appear shortly; use \`/agent smoke\` to run checks.)` });
