name: ChatGPT Agent - Build Plugin

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  # optional manual run:
  # workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  generate:
    if: |
      (github.event_name == 'issues') ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/agent'))
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure git user for CI
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Determine request text
        id: req
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "issues" ]]; then
            {
              printf 'text<<EOF\n'
              printf '%s — %s\n' "${{ github.event.issue.title }}" "${{ github.event.issue.body }}"
              printf 'EOF\n'
            } >> "$GITHUB_OUTPUT"
          else
            echo "text=${{ github.event.comment.body }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install deps for agent script
        run: |
          npm init -y >/dev/null 2>&1 || true
          npm i --no-audit --no-fund openai@^4 @octokit/rest@^20

      - name: Run agent (plan -> files -> branch -> PR)
        id: agent
        run: |
          node .github/agent/plan-and-commit.mjs <<'EOF'
          ${{ steps.req.outputs.text }}
          EOF

      - name: Post PR link
        if: steps.agent.outputs.pr_url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const url = "${{ steps.agent.outputs.pr_url }}";
            const issue_number =
              context.payload.issue?.number ||
              (context.payload.comment?.issue_url
                ? Number(context.payload.comment.issue_url.split('/').pop())
                : undefined);
            if (issue_number) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number,
                body: `✅ Agent opened PR: ${url}`
              });
            } else {
              core.info(`PR opened: ${url}`);
            }
