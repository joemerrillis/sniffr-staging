#!/usr/bin/env node
/**
 * Create a tenant-safe, themed page skeleton with form/list patterns and UI primitives.
 * Usage:
 *   node scripts/scaffold-page.mjs dogs/referrals --title "Referrals" --with=form,list
 */
import fs from 'node:fs';
import path from 'node:path';
import { fileURLToPath } from 'node:url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const args = process.argv.slice(2);
if (!args.length) {
  console.error('Usage: node scripts/scaffold-page.mjs <segment> [--title "Title"] [--with form,list]');
  process.exit(1);
}

const segment = args[0].replace(/^\/+|\/+$/g, ''); // e.g. dogs/referrals
const titleArg = getFlag('--title') || toTitle(segment.split('/').pop());
const withArg = (getFlag('--with') || '').split(',').filter(Boolean); // ['form','list']

function getFlag(name){
  const i = args.indexOf(name);
  if (i !== -1) return args[i+1];
  const kv = args.find(a => a.startsWith(name + '='));
  return kv ? kv.split('=')[1] : undefined;
}
function toTitle(s){ return s.replace(/[-_]/g,' ').replace(/\b\w/g, m=>m.toUpperCase()); }

const dir = path.join(process.cwd(), 'app', '(tenants)', '[tenant]', segment);
fs.mkdirSync(dir, { recursive: true });

const pagePath = path.join(dir, 'page.tsx');
const loadingPath = path.join(dir, 'loading.tsx');
const errorPath = path.join(dir, 'error.tsx');
const compDir = path.join(dir, 'components');
fs.mkdirSync(compDir, { recursive: true });

const imports = [
  "import { Suspense } from 'react';",
  "import { PageHeader } from '@/components/ui/page-header';",
  "import { Card } from '@/components/ui/card';",
  ... (withArg.includes('form') ? ["import { ReferralForm } from './components/ReferralForm';"] : []),
  ... (withArg.includes('list') ? ["import { ReferralList } from './components/ReferralList';"] : []),
].join('\n');

const page = `// Auto-generated by scaffold-page.mjs\nexport const dynamic = 'force-dynamic';\n\n${imports}\n\nexport default async function Page({ params }: { params: { tenant: string }}) {\n  return (\n    <div className=\"container\">\n      <PageHeader title=\"${titleArg}\" subtitle=\"Manage and track ${titleArg.toLowerCase()}\" />\n      <div className=\"grid gap-var space-y-0 md:grid-cols-3\">\n        ${(withArg.includes('form')) ? `<Card className=\"md:col-span-1\"><ReferralForm /></Card>` : ''}\n        ${(withArg.includes('list')) ? `<Card className=\"md:col-span-2\"><Suspense><ReferralList /></Suspense></Card>` : ''}\n      </div>\n    </div>\n  );\n}\n`;

const loading = `export default function Loading(){ return <div className=\"skeleton\" aria-busy>Loading ${titleArg}â€¦</div>; }\n`;
const error = `export default function Error({ error }: { error: Error }){ return <div role=\"alert\">Failed to load: {error.message}</div>; }\n`;

fs.writeFileSync(pagePath, page);
fs.writeFileSync(loadingPath, loading);
fs.writeFileSync(errorPath, error);

// Optional components
if (withArg.includes('form')) {
  fs.writeFileSync(path.join(compDir, 'ReferralForm.tsx'), `\n'use client';\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\n\nexport function ReferralForm(){\n  const [open,setOpen]=useState(false);\n  async function onSubmit(e:any){ e.preventDefault(); /* TODO: call POST /api/referrals */ }\n  return (\n    <div className=\"p-var\">\n      <form onSubmit={onSubmit} className=\"grid gap-var\">\n        <label className=\"label\">Friend's Email<Input name=\"email\" type=\"email\" required/></label>\n        <label className=\"label\">Message<Input name=\"message\"/></label>\n        <div className=\"flex gap-var\">\n          <Button type=\"submit\" variant=\"solid\">Send Referral</Button>\n          <Sheet open={open} onOpenChange={setOpen}>\n            <SheetTrigger asChild><Button variant=\"outline\">Preview</Button></SheetTrigger>\n            <SheetContent>TODO: preview content</SheetContent>\n          </Sheet>\n        </div>\n      </form>\n    </div>\n  );\n}\n`);
}

if (withArg.includes('list')) {
  fs.writeFileSync(path.join(compDir, 'ReferralList.tsx'), `\nimport { DataTable } from '@/components/ui/data-table';\nexport async function ReferralList(){\n  // TODO: fetch from /api/referrals\n  const rows = [];\n  return <DataTable rows={rows} columns={[{key:'email',label:'Email'},{key:'status',label:'Status'}]} />;\n}\n`);
}

console.log(`Created page at app/(tenants)/[tenant]/${segment}`);
